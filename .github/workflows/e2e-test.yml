name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-test:
    runs-on: ubuntu-latest


    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: ./mars-expedition

    env:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      DB_PORT: 5432
      BACKEND_PORT: 8080
      BACKEND_URL: http://localhost:8080
      VITE_USERNAME: test
      VITE_PASSWORD: Rolad12!
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin


    steps:
      - name: Checkout Frontend Repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Frontend
        run: npm install

      - name: Checkout Backend Repo
        uses: actions/checkout@v3
        with:
          repository: UGTeamProject/mars-expedition-be
          path: backend

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          working-directory: backend
          distribution: 'temurin'
          java-version: '21'

      - name: Start Backend
        run: ./gradlew bootRun
        working-directory: backend/expedition

      - name: Wait for Backend to Become Healthy
        run: |
          echo "Waiting for backend healthcheck..."
          for i in {1..30}; do
            if curl -f http://localhost:8080/actuator/health; then
              echo "Backend is up!";
              break;
            fi
            echo "Waiting for backend... ($i)"
            sleep 2
          done

      - name: Create Test User via API
        run: |
          curl -X POST http://localhost:8080/api/player \
            -H "Content-Type: application/json" \
            -d '{"username":"test","email":"test@gmail.com","password":"Rolad12!"}'

      - name: Start Frontend in Background
        run: npm run dev

      - name: Wait for Frontend to be Ready
        run: sleep 10

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30